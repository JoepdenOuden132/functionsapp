name: Build and deploy .NET 7.0 project to Azure Function App - paymentsystemfunction

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'  # De rootmap van je project
  DOTNET_VERSION: '8.0.x'  # Specificeer de juiste .NET versie (3.1.x voor .NET Core 3.1)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Dit is vereist voor het aanvragen van de JWT

    steps:
      # Stap 1: Checkout je repository
      - name: Checkout GitHub Action
        uses: actions/checkout@v4

      # Stap 2: Setup de juiste .NET SDK versie (3.1)
      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Check .NET Version
        run: dotnet --version
      - run: dotnet --info
        shell: bash

      - name: Install Azure Functions workload
        run: dotnet workload install azure-functions
        shell: bash
        
      # Stap 4: Bouw het project
      - name: Resolve Project Dependencies Using Dotnet
        run: |
          pushd './application'  
          dotnet restore './Eventgridfuntionapp.csproj' 
          dotnet build './Eventgridfuntionapp.csproj' --configuration Release --output ./output
          popd
        shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
        env:
          AZURE_FUNCTIONAPP_PACKAGE_PATH: .
          DOTNET_VERSION: 8.0.x
          DOTNET_ROOT: /home/runner/.dotnet

      - run: dotnet --info
        shell: bash
        
      
      # Stap 5: Login naar Azure met behulp van de Azure-login actie
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      # Stap 6: Deploy naar Azure Function App
      - name: Run Azure Functions Action
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'paymentsystemfunction'  # De naam van je Azure Function App
          slot-name: 'Production'           # De slotnaam (bijv. Production)
          package: pushd './application/output'  # Het pad naar de outputmap na de build
